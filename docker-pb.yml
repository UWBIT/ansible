- name: Install Docker on Ubuntu
  hosts: dockage
  remote_user: infra
  become: true
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64

  tasks:
    - name: Update and upgrade all packages to the latest version
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common

    - name: Create directory for Docker's GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Print architecture variables
      ansible.builtin.debug:
        msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
          signed-by=/etc/apt/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        filename: docker
        state: present

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service

    - name: Create directory Docker
      ansible.builtin.file:
        path: /infra/docker
        state: directory
        mode: '0755'
        owner: infra
        group: docker

    - name: Create directory Dockage
      ansible.builtin.file:
        path: /infra/docker/dockage
        state: directory
        mode: '0755'
        owner: infra
        group: docker

    - name: Create directory Dozzle
      ansible.builtin.file:
        path: /infra/docker/dozzle
        state: directory
        mode: '0755'
        owner: infra
        group: docker        

        # Copy Docker Compose files from source directories
    - name: Copy Dockage Docker Compose file
      ansible.builtin.copy:
        src: /infra/ansible/docker/dockage/compose.yml
        dest: /infra/docker/dockage
        mode: '0644'

    - name: Copy Dozzle Docker Compose file
      ansible.builtin.copy:
        src: /infra/ansible/docker/dozzle/compose.yml
        dest: /infra/docker/dozzle
        mode: '0644'

    # Run Docker Compose for Dockage and Dozzle
    - name: Start Dockage with Docker Compose
      ansible.builtin.command: docker compose -f /infra/docker/dockage/compose.yml up -d
      args:
        chdir: /infra/docker/dockage

#    - name: Start Dozzle with Docker Compose
#      ansible.builtin.command: docker-compose -f /infra/docker/dozzle up -d
#      args:
#        chdir: /infra/docker/dozzle